header {
    background: #BBBBBB;
    padding: 25px 0;
}

body {
    font-family: 'Montserrat', sans-serif;
}

.caixa {
    position: relative;
    width: 940px;
    margin: 0 auto;
}

nav {
    position: absolute;
    top: 110px;
    right: 0;
}

nav li {
    display: inline;
    margin: 0 0 0 15px;
}

nav a {
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

nav a:hover {
    color: #C78C19;
    text-decoration: underline;
}

.produtos {
    width: 940px;
    margin: 0 auto;
    padding: 50px 0;
}

.produtos li {
    display: inline-block;
    text-align: center;
    width: 30%;
    height: 415px;
    vertical-align: top;
    margin: 0 1.5%;
    padding: 30px 20px;
    box-sizing: border-box;
    border: #000000 2px solid;
    border-radius: 10px;
}

.produtos li:hover {
    border-color: #C78C19;
}

.produtos li:active {
    border-color: #088C19;
}

.produtos li:hover h2 {
    font-size: 34px;
}

.produtos h2 {
    font-size: 30px;
    font-weight: bold;
}

.produto-descricao {
    font-size: 18px;
}

.produto-preco {
    font-size: 22px;
    font-weight: bold;
    margin-top: 10px;
}

footer {
    text-align: center;
    background: url("bg.jpg");
    padding: 40px 0;
}

.copyright {
    color: #FFFFFF;
    font-size: 13px;
    margin: 20px 0 0;
}

main {
    
}

form {
    margin: 40px 0;
}

form label, form legend {
    display: block;
    font-size: 20px;
    margin: 0 0 10px;
}

.input-padrao {
    display: block;
    margin: 0 0 20px;
    padding: 10px 25px;
    width: 50%;
}

.checkbox {
    margin: 20px 10px 20px 0;
}

.enviar {
    width: 40%;
    padding: 15px 0;
    background: orange;
    color: white;
    font-weight: bold;
    font-size: 18px;
    border: none;
    border-radius: 5px;
    transition: 1s all;
    cursor: pointer;
}

.enviar:hover {
    background: darkorange;
    transform: scale(1.2);
}

table {
    margin: 40px 0 20px;
}

thead {
    background: #555555;
    color: white;
    font-weight: bold;
}

td, th {
    border: 1px solid #000000;
    padding: 8px 15px;
}

/* css da página inicial */
.banner {
    width: 100%;
}

.titulo-principal {
    text-align: center;
    font-size: 2em;  
    margin: 0 0 1em;
    clear: left;
}

.titulo-principal:before {
    content: "[ ";
}

.titulo-principal:after {
    content: " ]"
}

/*
    As pseudos classes "before" e "after" permitar manipular ou acrescentar conteudo antes e depois
    do css ser aplicado
*/

/* 
    em REPRESENTA O VALOR BASE DA FONTE E A NUMERACAO O QUANTO ESTA AUMENTANDO PROPORCIONALMENTE
    EX:
        - um titulo tem como base 15px
        - ao aplicar um CSS com font-size de 2em o titulo passa a ter 30px 
*/

/*
    A PROPRIEDADE FLOAT ALTERA TODA A ESTRURA DA PAGINA QUE ESTÁ ABAIXO DELE, PARA IMPEDIR ESSAS
    ALTERAÇÕES PODEMOS USAR A PROPRIEDADE CLEAR QUE LIMPARA AS ALTEÇÕES CAUSADAS PELO FLOAT
*/

.principal {
    padding: 3em 0;
    background: #FEFEFE;
    width: 940px;
    margin: 0 auto;
}

.principal p {
    margin: 0 0 1em;
}

.principal strong {
    font-weight: bold;
}

.principal em {
    font-style: italic;
}

.utensilios {
    width: 120px;
    float: left;
    margin: 0 20px 0 0;
}

.mapa {
    padding: 3em 0;
    background: linear-gradient(#FEFEFE, #888888);
}

/*
    a propriedade BACKGROUND possui a função 'linear-gradient' que permite fazer o efeito de gradiente.
    Existem vários formas de custominar o gradiente. EX:
                        começa  0%      25%   75%
    background: linear-gradient(orange, blue, red, black);

                                vai até 50%
    background: linear-gradient(orange 50%, blue, red, black);

            na primeira propriedade é possíveç indicar a inclinação
    background: linear-gradient(45deg , orange, blue, red, black);

            gradiente circular
    background: radial-gradient(orange, blue, red, black);
*/

.mapa-conteudo {
    width: 940px;
    margin: 0 auto;
}

.mapa p {
    margin: 0 0 2em;
    text-align: center;
}

.beneficios {
    padding: 3em 0;
    background: #888888;
}

.conteudo-beneficios {
    width: 640px;
    margin: 0 auto;
}
.lista-beneficios {
    width: 40%;
    display: inline-block;
    vertical-align: top;
}

/*
    display: inline-block --> QUALQUER ELEMENTO E ESPAÇAMENTO PODE ALTERAR A EXIBIÇÃO, ATÉ MESMO 
    LINHAS VAZIAS NO HTML
*/

.itens {
    line-height: 1.5;
}

.itens:first-child{
    font-weight: bold;
}

.itens:before {
    content: "★";
}

/*
    PSEUDO CLASSE - basta colocar : e o nome da pseudo classe. Existem vários pseudos classes. São
    uma ótima forma de aplicar o css de forma dinâmica e eficiente em muitos elemementos ou em elementos
    específicos. É possível aplicar mais e uma pseudo classe em um elemnto.
*/

.imagem-beneficios {
    width: 60%;
}

.video {
    width: 560px;
    margin: 2em auto;
}





/*
    MARGIN (ESPAÇAMENTO): 
    0 --> topo
    0 --> direita
    0 --> baixo
    0 --> esquerda
*/

/*
    POSITION: 
    statics --> o ponto inicial dos elementos não é alteravel
    relative --> a posição do elemento é alteravel em relação ao seu ponto inicial
    absolute --> podemos alterar a posição do elemento da forma que quisermos
*/

/*
    BOX-SIZING: 
    Por padrão quando adicionamos espaçamento interno (PADDING) o navegador soma os valoress
    junto com a dimensão (altura e largura) do elemento ou da divisão. Para conseguir adicionar
    espaçamento interno sem alterar a dimenção da divisão é preciso adicionar a propriedade
    "BOX-SIZING: BORDER-BOX". Esta permite adiconar espaçamento interno, mas respeitando a
    dimensão atual da divisão sem altera-la. 
*/

/*
    BORDA:
    Para criar uma borda é necessário utilizar três propriedades básicas:
    - BORDER-COLOR
    - BORDER-WIDTH
    - BORDER-STYLE

    OBS: Existe uma propriedade que unifica estás propriedas básicas que é a "BORDER". EX:
    border: 2px (width) solid (style) #000000 (color)
*/

/*
    MOUSE: É possível identifar ações feitas com o :-moz-user-disabled

    elemento:HOVER --> quando o mouse estiver em cima
    elemento:ACTIVE --> quando o mouser estiver clicado (pressionado)



    FLUXO DE COMPORTAMENTO:

     elemento1 elemento2:TAG (HOVER) --> quando o mouse estiver em cima do elemento2 (filho) 
            que pertence ao elemento1 (pai) será executado o CSS

    elemento1 elemento2:TAG (HOVER) elemento3: --> alterar o CSS do elemento3 (neto) quando o mouse
            estiver em cima do elemento2 (filho) que perntece ao elemento3 (pai)

*/


/*
    ADICIONANDO ESTILO SEM REPLICAR O CÓDGIO

    Ao criar uma configuração de estilo é possível acrescentar mais de uma TAG, CLASSE ou ID
    que receberá o CSS. Isso ajuda a não replicar o mesmo código mais de uma vez. Para fazer isso
    basta colocar virgulas separando as referencias das TAGs, CLASSEs ou IDs. EX:

    tag_1, .classe {
        color: red;
        font-size: 30px;
    }
*/

/*
    HIERARQUIA NO CSS

    O CSS segue uma hierarquia ao aplicar os estilos. Cada referencia possui uma 'força' que
    representa está hierarquia.

    FORÇA:
    TAG = 1 ponto
    .CLASS = 10 pontos
    #ID (IDENTIFICADOR) = 100 pontos
    INLINE (estilo direto na TAG no HTML) = 1000 pontos

    EX:
    (1 ponto)
    p {
        color: red;
    }

    (1 + 1 = 2 pontos)
    form p {
        color: blue;
    }

    (10 pontos)
    .teste {
        color: yellow;
    }

    (1 + 10 = 11 pontos)
    p.teste {
        color: green;
    }

    (100 pontos)
    #teste {
        color: pink;
    }

    Nesse exemplo a TAG 'p' é a que tem menos relevancia, então por consequancia ela será 
    sobrescrista pelos outros estilos. O identificador '#teste' é o que tem mais relavancia, ele 
    sobrescreverá todos os outros estilos.

    

*/